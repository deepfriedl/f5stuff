#This playbook creates a pool with nodes, a SNAT
#pool, and a VIP
---
 
- hosts: all
  pre_tasks:
    - include_vars: creds.yaml
   
  tasks:
   - name: Create a pool
     bigip_pool:
         lb_method: round_robin
         name: web1
         slow_ramp_time: 120
         validate_certs: no
         monitor_type: m_of_n
         monitors:
           - http
         server: "{{ inventory_host }}"
         password: "{{ password }}"
         user: "{{ user }}"
     delegate_to: localhost

   - name: Create node 1
     bigip_node:
         name: centos1
         validate_certs: no
         server: "{{ inventory_host }}"
         password: "{{ password }}"
         user: "{{ user }}"
     delegate_to: localhost

    - name: Create node 2
      bigip_node:
         name: centos2
         validate_certs: no
         server: "{{ inventory_host }}"
         password: "{{ password }}"
         user: "{{ user }}"
     delegate_to: localhost

    - name: Add nodes to pool
      bigip_pool_member:
         description: webserver-1
         host: "{{ item.host }}"
         name: "{{ item.name }}"
         pool: web1
         port: 80
         server: "{{ inventory_host }}"
         password: "{{ password }}"
         user: "{{ user }}"
         validate_certs: no
     delegate_to: localhost
     with_items:
         - host: 192.168.202.252
           name: centos1
         - host: 192.168.202.253
           name: centos2

    - name: Add the SNAT pool 'SNAT1'
      bigip_snat_pool:
         name: "SNAT1"
         state: "present"
         members:
             - 192.168.202.254
         server: "{{ inventory_host }}"
         password: "{{ password }}"
         user: "{{ user }}"

   - name: Create a VIP
     bigip_virtual_server:
         description: vip1
         destination: 192.168.200.250
         name: vip-1
         pool: web1
         port: 80
         snat: SNAT1
         all_profiles:
              - http
              - clientssl
         validate_certs: no
         server: "{{ inventory_host }}"
         password: "{{ password }}"
         user: "{{ user }}"
     delegate_to: localhost
